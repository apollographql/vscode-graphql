>// hint for reading the snapshots generated by this file:
#^^ source.ts comment.line.double-slash.ts punctuation.definition.comment.ts
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ts comment.line.double-slash.ts
>// it is important to check that a rule doesn't only enter `meta.embedded.block.graphql`
#^^ source.ts comment.line.double-slash.ts punctuation.definition.comment.ts
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ts comment.line.double-slash.ts
>// but also leaves it again
#^^ source.ts comment.line.double-slash.ts punctuation.definition.comment.ts
#  ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ts comment.line.double-slash.ts
>
>`#NormalComment
#^ source.ts string.template.ts punctuation.definition.string.template.begin.ts
# ^^^^^^^^^^^^^^^ source.ts string.template.ts
>query Foo {test}`;
#^^^^^^^^^^^^^^^^ source.ts string.template.ts
#                ^ source.ts string.template.ts punctuation.definition.string.template.end.ts
#                 ^ source.ts punctuation.terminator.statement.ts
>
>`#graphql
#^ source.ts
# ^ source.ts meta.embedded.block.graphql comment.line.graphql.js
#  ^^^^^^^ source.ts meta.embedded.block.graphql comment.line.graphql.js markup.italic
>query Q1 {test}`;
#^^^^^ source.ts meta.embedded.block.graphql keyword.operation.graphql
#     ^ source.ts meta.embedded.block.graphql
#      ^^ source.ts meta.embedded.block.graphql entity.name.function.graphql
#        ^ source.ts meta.embedded.block.graphql meta.selectionset.graphql
#         ^ source.ts meta.embedded.block.graphql meta.selectionset.graphql punctuation.operation.graphql
#          ^^^^ source.ts meta.embedded.block.graphql meta.selectionset.graphql variable.graphql
#              ^ source.ts meta.embedded.block.graphql meta.selectionset.graphql punctuation.operation.graphql
#               ^ source.ts
#                ^ source.ts punctuation.terminator.statement.ts
>
>` # graphql
#^ source.ts
# ^^^ source.ts meta.embedded.block.graphql comment.line.graphql.js
#    ^^^^^^^ source.ts meta.embedded.block.graphql comment.line.graphql.js markup.italic
>query Q2 {test}`;
#^^^^^ source.ts meta.embedded.block.graphql keyword.operation.graphql
#     ^ source.ts meta.embedded.block.graphql
#      ^^ source.ts meta.embedded.block.graphql entity.name.function.graphql
#        ^ source.ts meta.embedded.block.graphql meta.selectionset.graphql
#         ^ source.ts meta.embedded.block.graphql meta.selectionset.graphql punctuation.operation.graphql
#          ^^^^ source.ts meta.embedded.block.graphql meta.selectionset.graphql variable.graphql
#              ^ source.ts meta.embedded.block.graphql meta.selectionset.graphql punctuation.operation.graphql
#               ^ source.ts
#                ^ source.ts punctuation.terminator.statement.ts
>
>`# GraphQL
#^ source.ts
# ^^ source.ts meta.embedded.block.graphql comment.line.graphql.js
#   ^^^^^^^ source.ts meta.embedded.block.graphql comment.line.graphql.js markup.italic
>query Q3 {
#^^^^^ source.ts meta.embedded.block.graphql keyword.operation.graphql
#     ^ source.ts meta.embedded.block.graphql
#      ^^ source.ts meta.embedded.block.graphql entity.name.function.graphql
#        ^ source.ts meta.embedded.block.graphql meta.selectionset.graphql
#         ^ source.ts meta.embedded.block.graphql meta.selectionset.graphql punctuation.operation.graphql
>  test
#^^ source.ts meta.embedded.block.graphql meta.selectionset.graphql
#  ^^^^ source.ts meta.embedded.block.graphql meta.selectionset.graphql variable.graphql
>}`;
#^ source.ts meta.embedded.block.graphql meta.selectionset.graphql punctuation.operation.graphql
# ^ source.ts
#  ^ source.ts punctuation.terminator.statement.ts
>
>`#gql
#^ source.ts
# ^ source.ts meta.embedded.block.graphql comment.line.graphql.js
#  ^^^ source.ts meta.embedded.block.graphql comment.line.graphql.js markup.italic
># normal comment
#^^^^^^^^^^^^^^^^ source.ts meta.embedded.block.graphql comment.line.graphql.js
>query Q4 {
#^^^^^ source.ts meta.embedded.block.graphql keyword.operation.graphql
#     ^ source.ts meta.embedded.block.graphql
#      ^^ source.ts meta.embedded.block.graphql entity.name.function.graphql
#        ^ source.ts meta.embedded.block.graphql meta.selectionset.graphql
#         ^ source.ts meta.embedded.block.graphql meta.selectionset.graphql punctuation.operation.graphql
>  test
#^^ source.ts meta.embedded.block.graphql meta.selectionset.graphql
#  ^^^^ source.ts meta.embedded.block.graphql meta.selectionset.graphql variable.graphql
>}`;
#^ source.ts meta.embedded.block.graphql meta.selectionset.graphql punctuation.operation.graphql
# ^ source.ts
#  ^ source.ts punctuation.terminator.statement.ts
>
>`#graphql
#^ source.ts
# ^ source.ts meta.embedded.block.graphql comment.line.graphql.js
#  ^^^^^^^ source.ts meta.embedded.block.graphql comment.line.graphql.js markup.italic
>query Q5 {
#^^^^^ source.ts meta.embedded.block.graphql keyword.operation.graphql
#     ^ source.ts meta.embedded.block.graphql
#      ^^ source.ts meta.embedded.block.graphql entity.name.function.graphql
#        ^ source.ts meta.embedded.block.graphql meta.selectionset.graphql
#         ^ source.ts meta.embedded.block.graphql meta.selectionset.graphql punctuation.operation.graphql
>  test
#^^ source.ts meta.embedded.block.graphql meta.selectionset.graphql
#  ^^^^ source.ts meta.embedded.block.graphql meta.selectionset.graphql variable.graphql
>}`;
#^ source.ts meta.embedded.block.graphql meta.selectionset.graphql punctuation.operation.graphql
# ^ source.ts
#  ^ source.ts punctuation.terminator.statement.ts
>
>// syntax highlighting cannot work in all examples after this - textmate grammars don't work over multiple lines like this
#^^ source.ts comment.line.double-slash.ts punctuation.definition.comment.ts
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ts comment.line.double-slash.ts
>`
#^ source.ts string.template.ts punctuation.definition.string.template.begin.ts
>
># graphql
#^^^^^^^^^^ source.ts string.template.ts
>
>query Q6 {
#^^^^^^^^^^^ source.ts string.template.ts
>  test
#^^^^^^^ source.ts string.template.ts
>}
#^^ source.ts string.template.ts
>`;
#^ source.ts string.template.ts punctuation.definition.string.template.end.ts
# ^ source.ts punctuation.terminator.statement.ts
>