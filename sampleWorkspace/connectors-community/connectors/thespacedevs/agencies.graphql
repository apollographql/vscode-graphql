extend schema
  @link(
    url: "https://specs.apollo.dev/federation/v2.10"
    import: ["@key", "@requires", "@shareable"]
  )
  @link(
    url: "https://specs.apollo.dev/connect/v0.2"
    import: ["@source", "@connect"]
  )
  @source(name: "llv2", http: { baseURL: "https://ll.thespacedevs.com/2.3.0/" })

type Agency @key(fields: "id") {
  id: ID!
  name: String @shareable
  abbrev: String @shareable 
  type: String @shareable
  featured: Boolean @shareable
  country: [Country] @shareable
  description: String @shareable
  administrator: String @shareable
  foundingYear: Int @shareable
  spacecraft: String @shareable
  image: Image @shareable
  logo: Image @shareable
  socialLogo: Image @shareable
}
type Image @shareable{
  id: ID!
  name: String
  url: String
  thumbnail: String
  credit: String
  singleUse: Boolean
  license: ImageLicense
}
type ImageLicense @shareable{
  name: String
  link: String
}
type AgencyConnection {
  pageInfo: PageInfo
  results: [Agency]
}
type Country @shareable {
  id: ID!
  name: String
  alpha2Code: String
  alpha3Code: String
  nationalityName: String
  nationalityNameComposed: String
}
type PageInfo @shareable {
  count: Int
  next: String
  previous: String
}
type Query {
  agency(id: ID!): Agency
    @connect(
      source: "llv2"
      entity: true
      http: { GET: "/agencies/{$args.id}/?format=json" }
      selection: """
      id
      name
      abbrev
      type: type.name
      featured
      country {
        id
        name
        alpha2Code: alpha_2_code
        alpha3Code: alpha_3_code
        nationalityName: nationality_name
        nationalityNameComposed: nationality_name_composed
      }
      description
      administrator
      foundingYear: founding_year
      spacecraft
      image {
        id
        name
        url: image_url
        thumbnail: thumbnail_url
        credit
        license {
          name
          link
        }
        singleUse: single_use
      }
      logo {
        id
        name
        url: image_url
        thumbnail: thumbnail_url
        credit
        license {
          name
          link
        }
        singleUse: single_use
      }
      socialLogo: social_logo {
        id
        name
        url: image_url
        thumbnail: thumbnail_url
        credit
        license {
          name
          link
        }
        singleUse: single_use
      }
      """
    )
  agencies(search: String, offset: Int = 0, limit: Int = 20): AgencyConnection
    @connect(
      source: "llv2"
      http: { 
        GET: "/agencies/?format=json"
        queryParams: """
        search: $args.search
        limit: $args.limit
        offset: $args.offset
        """
         }
      selection: """
      pageInfo {
        count
        next
        previous
      }
      results {
        id
        name
        abbrev
        type: type.name
        featured
        country {
          id
          name
          alpha2Code: alpha_2_code
          alpha3Code: alpha_3_code
          nationalityName: nationality_name
          nationalityNameComposed: nationality_name_composed
        }
        description
        administrator
        foundingYear: founding_year
        spacecraft
        image {
          id
          name
          url: image_url
          thumbnail: thumbnail_url
          credit
          license {
            name
            link
          }
          singleUse: single_use
        }
        logo {
          id
          name
          url: image_url
          thumbnail: thumbnail_url
          credit
          license {
            name
            link
          }
          singleUse: single_use
        }
        socialLogo: social_logo {
          id
          name
          url: image_url
          thumbnail: thumbnail_url
          credit
          license {
            name
            link
          }
          singleUse: single_use
        }
      }
      """
    )
}
