// hint for reading the snapshots generated by this file:
// it is important to check that a rule doesn't only enter `meta.embedded.block.graphql`
// but also leaves it again

declare function gql<A = any, B = any>(strings: TemplateStringsArray): void;
declare function foo<A = any, B = any>(strings: TemplateStringsArray): void;
declare type SomeResult = any;
declare type SomeVariables = any;

// for comparison - this is what a normal function all is colored
foo`query Foo { test }`;
foo<SomeResult, SomeVariables>`query Foo { test }`;

// prettier-ignore
gql`query Q1 { test }`

// prettier-ignore
gql<SomeResult, SomeVariables>`query Q2 { test }`

// prettier-ignore
gql  <SomeResult, SomeVariables>  `
query Q3 { test }`

// prettier-ignore
gql    `query Q4 { test }`

gql`
  query Q5 {
    test
  }
`;

gql<SomeResult, SomeVariables>`
  query Q6 {
    test
  }
`;

// prettier-ignore
gql   `
  query Q7 {
    test
  }
`;

// syntax highlighting cannot work in all examples after this - textmate grammars don't work over multiple lines like this

// prettier-ignore
gql
`query Q8 { test }`

// prettier-ignore
gql<{
  test: string;
},{
  test: string;
}>`query Q9 { test }`

gql<
  {
    test: string;
  },
  {
    test: string;
  }
>`
  query Q10 {
    test
  }
`;

// prettier-ignore
gql
`
  query Q11 {
    test
  }
`;

export {};
