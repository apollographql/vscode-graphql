{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Apollo Connectors Mapping Syntax",
  "scopeName": "source.apollo.connectors.mapping",
  "patterns": [
    {
      "include": "#JSONSelection"
    },
    {
      "include": "source.graphql#graphql-skip-newlines"
    }
  ],
  "repository": {
    "JSONSelection": {
      "patterns": [
        {
          "include": "#PathSelection"
        },
        {
          "include": "#Comment"
        }
      ]
    },
    "SubSelection": {
      "begin": "\\s*({)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.selection.open"
        }
      },
      "end": "\\s*(})",
      "endCaptures": {
        "1": {
          "name": "punctuation.selection.close"
        }
      },
      "patterns": [
        {
          "include": "#NamedSelection"
        },
        {
          "include": "#Comment"
        }
      ]
    },
    "NamedSelection": {
      "patterns": []
    },
    "PathSelection": {
      "begin": "(?=[$]|((?:[a-zA-Z_][0-9a-zA-Z_]*|(?:\"[^\"]*\"|'[^']*')))(?=\\s*(?:[?])?(?=\\s*(?:[.](?:[a-zA-Z_][0-9a-zA-Z_]*|(?:\"[^\"]*\"|'[^']*'))|->[a-zA-Z_][0-9a-zA-Z_]*)))|@|$[(])",
      "end": "(?=.)",
      "applyEndPatternLast": 1,
      "patterns": [
        {
          "include": "#ExprPath"
        },
        {
          "include": "#VarPath"
        },
        {
          "include": "#KeyPath"
        },
        {
          "include": "#AtPath"
        }
      ]
    },
    "VarPath": {
      "begin": "([$])([a-zA-Z_][0-9a-zA-Z_]*)?(?!\\w)",
      "beginCaptures": {
        "1": {
          "name": "variable.language.path.dollar"
        },
        "2": {
          "name": "variable.language.path.identifier"
        }
      },
      "end": "(?=.)",
      "applyEndPatternLast": 1,
      "patterns": [
        {
          "include": "#PathTail"
        }
      ]
    },
    "KeyPath": {
      "begin": "((?:[a-zA-Z_][0-9a-zA-Z_]*|(?:\"[^\"]*\"|'[^']*')))(?=\\s*(?:[?])?(?=\\s*(?:[.](?:[a-zA-Z_][0-9a-zA-Z_]*|(?:\"[^\"]*\"|'[^']*'))|->[a-zA-Z_][0-9a-zA-Z_]*)))",
      "beginCaptures": {
        "1": {
          "name": "variable.path.key.identifier"
        }
      },
      "end": "(?=.)",
      "applyEndPatternLast": 1,
      "patterns": [
        {
          "include": "#PathTail"
        }
      ]
    },
    "AtPath": {
      "begin": "(@)",
      "beginCaptures": {
        "1": {
          "name": "variable.language.path.at"
        }
      },
      "end": "(?=.)",
      "applyEndPatternLast": 1,
      "patterns": [
        {
          "include": "#PathTail"
        }
      ]
    },
    "ExprPath": {
      "begin": "([$])(?=[(])",
      "beginCaptures": {
        "1": {
          "name": "variable.language.path.dollar"
        }
      },
      "end": "(?=.)",
      "applyEndPatternLast": 1,
      "patterns": [
        {
          "begin": "([(])",
          "beginCaptures": {
            "1": {
              "name": "punctuation.brace.round.args.open"
            }
          },
          "end": "([)])",
          "endCaptures": {
            "1": {
              "name": "punctuation.brace.round.args.close"
            }
          },
          "patterns": [
            {
              "include": "#LitExpr"
            }
          ]
        },
        {
          "include": "#PathStep"
        }
      ]
    },
    "PathTail": {
      "begin": "([?])?(?=\\s*(?:[.](?:[a-zA-Z_][0-9a-zA-Z_]*|(?:\"[^\"]*\"|'[^']*'))|->[a-zA-Z_][0-9a-zA-Z_]*))",
      "beginCaptures": {
        "1": {
          "name": "variable.question.mark"
        }
      },
      "end": "(?=.)",
      "applyEndPatternLast": 1,
      "patterns": [
        {
          "include": "#PathStep"
        }
      ]
    },
    "PathStepDotAccess": {
      "match": "([.])((?:[a-zA-Z_][0-9a-zA-Z_]*|(?:\"[^\"]*\"|'[^']*')))([?]?)",
      "captures": {
        "1": {
          "name": "variable.dot"
        },
        "2": {
          "name": "variable.key.identifier"
        },
        "3": {
          "name": "variable.question.mark"
        }
      }
    },
    "PathStepArrowMethodArgs": {
      "begin": "(->)([a-zA-Z_][0-9a-zA-Z_]*)([(])",
      "end": "([)])([?]?)",
      "applyEndPatternLast": 1,
      "beginCaptures": {
        "1": {
          "name": "punctuation.arrow"
        },
        "2": {
          "name": "variable.identifier"
        },
        "3": {
          "name": "punctuation.brace.round.args.open"
        }
      },
      "endCaptures": {
        "1": {
          "name": "punctuation.brace.round.args.close"
        },
        "2": {
          "name": "variable.question.mark"
        }
      },
      "patterns": [
        {
          "include": "#LitExpr"
        },
        {
          "match": ",",
          "name": "punctuation.comma.args.separator"
        }
      ]
    },
    "PathStepArrowAccess": {
      "match": "(->)([a-zA-Z_][0-9a-zA-Z_]*)([?]?)",
      "captures": {
        "1": {
          "name": "punctuation.arrow"
        },
        "2": {
          "name": "variable.key.identifier"
        },
        "3": {
          "name": "variable.question.mark"
        }
      }
    },
    "PathStep": {
      "patterns": [
        {
          "include": "#PathStepDotAccess"
        },
        {
          "include": "#PathStepArrowMethodArgs"
        },
        {
          "include": "#PathStepArrowAccess"
        }
      ]
    },
    "LitExpr": {
      "patterns": [
        {
          "include": "#LitOpChainCenter"
        },
        {
          "include": "#LitPathTail"
        },
        {
          "include": "#LitPrimitive"
        },
        {
          "include": "#LitObject"
        },
        {
          "include": "#LitArray"
        },
        {
          "include": "#PathSelection"
        }
      ]
    },
    "LitPathTail": {
      "begin": "(?<![(])(?=\\s*(?:[?])?(?=\\s*(?:[.](?:[a-zA-Z_][0-9a-zA-Z_]*|(?:\"[^\"]*\"|'[^']*'))|->[a-zA-Z_][0-9a-zA-Z_]*)))",
      "end": "(?=.)",
      "applyEndPatternLast": 1,
      "patterns": [
        {
          "include": "#PathTail"
        }
      ]
    },
    "LitOpChainCenter": {
      "match": "(?<![(]|[?!&|=<>*/%+-])((?:[?][?]|[?][!]|&&|[|][|]|==|!=|<|<=|(?<!-)>|(?<!-)>=|[+]|-(?!>)|[*]|/|%))(?!\\s*(?:[?!&|=<>*/%+-]|[)]))",
      "captures": {
        "1": {
          "name": "keyword.operator"
        }
      }
    },
    "LitPrimitive": {
      "patterns": [
        {
          "include": "#LitString"
        },
        {
          "include": "#LitNumber"
        },
        {
          "match": "\\b(true|false|null)\\b",
          "name": "constant.language.LitPrimitive"
        }
      ]
    },
    "LitString": {
      "name": "string.quoted",
      "match": "(\")([^\"]*)(\")|(')([^']*)(')",
      "captures": {
        "1": {
          "name": "punctuation.definition.string.begin.graphql"
        },
        "2": {
          "name": "string.quoted.double.graphql"
        },
        "3": {
          "name": "punctuation.definition.string.end.graphql"
        },
        "4": {
          "name": "punctuation.definition.string.begin.graphql"
        },
        "5": {
          "name": "string.quoted.single.graphql"
        },
        "6": {
          "name": "punctuation.definition.string.end.graphql"
        }
      }
    },
    "LitNumber": {
      "name": "constant.numeric",
      "match": "(-?)([0-9]+([.][0-9]*)?|[.][0-9]+)"
    },
    "LitObject": {
      "begin": "\\s*({)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.object.open"
        }
      },
      "end": "\\s*(})",
      "endCaptures": {
        "1": {
          "name": "punctuation.object.close"
        }
      },
      "patterns": [
        {
          "include": "#LitProperty"
        },
        {
          "match": ",",
          "name": "punctuation.comma.object.separator"
        }
      ]
    },
    "LitProperty": {
      "begin": "\\b([a-zA-Z_][0-9a-zA-Z_]*)\\s*(:)\\s*",
      "beginCaptures": {
        "1": {
          "name": "variable.property.key"
        },
        "2": {
          "name": "punctuation.colon.property"
        }
      },
      "end": "(?=.)",
      "applyEndPatternLast": 1,
      "patterns": [
        {
          "include": "#LitExpr"
        }
      ]
    },
    "LitArray": {
      "begin": "\\s*(\\[)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.array.open"
        }
      },
      "end": "\\s*(\\])",
      "endCaptures": {
        "1": {
          "name": "punctuation.array.close"
        }
      },
      "patterns": [
        {
          "include": "#LitExpr"
        },
        {
          "match": ",",
          "name": "punctuation.comma.array.separator"
        }
      ]
    },
    "Comment": {
      "name": "comment.line.jsonselection",
      "match": "(\\s*)(#).*",
      "captures": {
        "1": {
          "name": "punctuation.whitespace.comment.leading.jsonselection"
        }
      }
    },
    "JSONSelectionString": {
      "contentName": "string.quoted",
      "begin": "((\"))",
      "beginCaptures": {
        "1": {
          "name": "string.quoted.double.graphql"
        },
        "2": {
          "name": "punctuation.definition.string.begin.graphql"
        }
      },
      "end": "((\"))",
      "endCaptures": {
        "1": {
          "name": "string.quoted.double.graphql"
        },
        "2": {
          "name": "punctuation.definition.string.end.graphql"
        }
      },
      "patterns": [
        {
          "begin": "\\s*({)",
          "contentName": "embedded",
          "debugName": "embedded",
          "beginCaptures": {
            "1": {
              "name": "punctuation.embedded.open"
            }
          },
          "end": "\\s*(})",
          "endCaptures": {
            "1": {
              "name": "punctuation.embedded.close"
            }
          },
          "patterns": [
            {
              "include": "#PathSelection"
            }
          ]
        }
      ]
    }
  }
}
